#!/usr/bin/env ruby
# encoding: utf-8

require "curses"
require "json"
require "net/https"
require "timeout"
require "uri"

require "./lib/casseo"

# load all user dashboards
dir = "#{File.expand_path("~")}/.casseo/dashboards"
if File.exists?(dir)
  # clever hack to get symlinks working properly
  Dir["#{dir}/**{,/*/**}/*.rb"].each do |d|
    require d
  end
end

$exit_message = nil

["TERM", "INT"].each do |s|
  Signal.trap(s) do
    $exit_message = "Caught deadly signal"
    Kernel.exit(0)
  end
end

begin
  Curses.cbreak      # no need for a newline to get type chars
  Curses.curs_set(1) # invisible
  Curses.noecho      # don't echo character on a getch

  Curses.init_screen

  # fail fast on missing required config
  Casseo::Config.required

  if ARGV.count > 0 && File.exists?(ARGV.first)
    require ARGV.first
  elsif ARGV.count > 0 && ARGV.first == "--list"
    $exit_message = Casseo::Dashboard.index.sort.join("\n")
  elsif ARGV.first
    Casseo::Dashboard.run(ARGV.first.to_sym)
  else
    Casseo::Dashboard.run(Casseo::Config.dashboard_default)
  end
rescue Casseo::ConfigError, Casseo::DashboardNotFound => e
  $exit_message = e.message
ensure
  Curses.close_screen
  puts $exit_message if $exit_message
end
